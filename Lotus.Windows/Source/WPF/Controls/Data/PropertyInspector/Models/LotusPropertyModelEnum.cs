//=====================================================================================================================
// Проект: Модуль платформы Windows
// Раздел: Подсистема работы с WPF
// Подраздел: Элементы интерфейса
// Группа: Элементы для работы с данными
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusPropertyModelEnum.cs
*		Модель отображения свойства объекта типа перечисления.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Core.Inspector;
//=====================================================================================================================
namespace Lotus
{
	namespace Windows
	{
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup WindowsWPFControlsData
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Модель отображения свойства объекта типа перечисления
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CPropertyModelEnum : PropertyModel<Enum>
		{
			#region ======================================= ДАННЫЕ ====================================================
			protected internal ArrayList _enumValues;
			protected internal List<string> _enumNames;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Значения перечисления
			/// </summary>
			public ArrayList EnumValues
			{
				get { return _enumValues; }
			}

			/// <summary>
			/// Имена перечисления
			/// </summary>
			public List<string> EnumNames
			{
				get { return _enumNames; }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CPropertyModelEnum()
			{
				_propertyType = TPropertyType.Enum;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="property_info">Метаданные свойства</param>
			//---------------------------------------------------------------------------------------------------------
			public CPropertyModelEnum(PropertyInfo property_info)
				: base(property_info, TPropertyType.Enum)
			{
				_enumValues = new ArrayList(Enum.GetValues(property_info.PropertyType));
				_enumNames = new List<string>(Enum.GetNames(property_info.PropertyType));
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="property_info">Метаданные свойства</param>
			/// <param name="property_desc">Список описания свойства</param>
			//---------------------------------------------------------------------------------------------------------
			public CPropertyModelEnum(PropertyInfo property_info, List<CPropertyDesc> property_desc)
				: base(property_info, property_desc, TPropertyType.Enum)
			{
				_enumValues = new ArrayList(Enum.GetValues(property_info.PropertyType));
				_enumNames = new List<string>(Enum.GetNames(property_info.PropertyType));
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================